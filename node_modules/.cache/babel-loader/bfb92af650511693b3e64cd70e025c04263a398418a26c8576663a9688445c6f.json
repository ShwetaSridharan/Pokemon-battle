{"ast":null,"code":"var _jsxFileName = \"/Users/shwetasridharan/Pokemon-React-App/src/components/PokemonBattleApp/PokemonBattleApp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PokemonCard from '../PokemonCard/PokemonCard';\nimport BattleControls from '../BattleControls/BattleControls';\nimport { fetchPokemonData } from '../../services/pokemonApi';\nimport { determineBattleOutcome } from '../../utils/battleLogic';\nimport './PokemonBattleApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonBattleApp = () => {\n  _s();\n  const [pokemon1, setPokemon1] = useState(null);\n  const [pokemon2, setPokemon2] = useState(null);\n  const [battleLog, setBattleLog] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchRandomPokemon();\n  }, []);\n  const fetchRandomPokemon = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const [poke1, poke2] = await Promise.all([fetchPokemonData(), fetchPokemonData()]);\n      setPokemon1(poke1);\n      setPokemon2(poke2);\n      setBattleLog('');\n    } catch (err) {\n      setError('Failed to fetch Pokémon data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const startBattle = () => {\n    if (!pokemon1 || !pokemon2) return;\n    const result = determineBattleOutcome(pokemon1, pokemon2);\n    setBattleLog(result);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading Pok\\xE9mon...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-battle-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pok\\xE9mon Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-arena\",\n      children: [pokemon1 && /*#__PURE__*/_jsxDEV(PokemonCard, {\n        pokemon: pokemon1,\n        isLeft: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vs\",\n        children: \"VS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), pokemon2 && /*#__PURE__*/_jsxDEV(PokemonCard, {\n        pokemon: pokemon2,\n        isLeft: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BattleControls, {\n      onStartBattle: startBattle,\n      onNewPokemon: fetchRandomPokemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), battleLog && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-log\",\n      children: battleLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonBattleApp, \"calSVciWReBFgSv8U/NxAh/aicI=\");\n_c = PokemonBattleApp;\nexport default PokemonBattleApp;\nvar _c;\n$RefreshReg$(_c, \"PokemonBattleApp\");","map":{"version":3,"names":["React","useState","useEffect","PokemonCard","BattleControls","fetchPokemonData","determineBattleOutcome","jsxDEV","_jsxDEV","PokemonBattleApp","_s","pokemon1","setPokemon1","pokemon2","setPokemon2","battleLog","setBattleLog","isLoading","setIsLoading","error","setError","fetchRandomPokemon","poke1","poke2","Promise","all","err","startBattle","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pokemon","isLeft","onStartBattle","onNewPokemon","_c","$RefreshReg$"],"sources":["/Users/shwetasridharan/Pokemon-React-App/src/components/PokemonBattleApp/PokemonBattleApp.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PokemonCard from '../PokemonCard/PokemonCard';\nimport BattleControls from '../BattleControls/BattleControls';\n\nimport { fetchPokemonData } from '../../services/pokemonApi';\nimport { determineBattleOutcome } from '../../utils/battleLogic';\nimport { Pokemon } from '../../types/pokemon';\nimport './PokemonBattleApp.css';\n\nconst PokemonBattleApp: React.FC = () => {\n  const [pokemon1, setPokemon1] = useState<Pokemon | null>(null);\n  const [pokemon2, setPokemon2] = useState<Pokemon | null>(null);\n  const [battleLog, setBattleLog] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string>('');\n\n  useEffect(() => {\n    fetchRandomPokemon();\n  }, []);\n\n  const fetchRandomPokemon = async (): Promise<void> => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const [poke1, poke2] = await Promise.all([\n        fetchPokemonData(),\n        fetchPokemonData()\n      ]);\n      setPokemon1(poke1);\n      setPokemon2(poke2);\n      setBattleLog('');\n    } catch (err) {\n      setError('Failed to fetch Pokémon data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const startBattle = (): void => {\n    if (!pokemon1 || !pokemon2) return;\n    const result = determineBattleOutcome(pokemon1, pokemon2);\n    setBattleLog(result);\n  };\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading Pokémon...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"pokemon-battle-app\">\n      <h1>Pokémon Battle</h1>\n      <div className=\"battle-arena\">\n        {pokemon1 && <PokemonCard pokemon={pokemon1} isLeft={true} />}\n        <div className=\"vs\">VS</div>\n        {pokemon2 && <PokemonCard pokemon={pokemon2} isLeft={false} />}\n      </div>\n      <BattleControls onStartBattle={startBattle} onNewPokemon={fetchRandomPokemon} />\n      {battleLog && <div className=\"battle-log\">{battleLog}</div>}\n    </div>\n  );\n};\n\nexport default PokemonBattleApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}