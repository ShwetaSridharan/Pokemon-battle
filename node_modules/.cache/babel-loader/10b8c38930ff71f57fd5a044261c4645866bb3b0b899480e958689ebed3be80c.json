{"ast":null,"code":"var _jsxFileName = \"/Users/shwetasridharan/Pokemon-React-App/src/components/PokemonBattleApp/PokemonBattleApp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PokemonCard from '../PokemonCard';\nimport { fetchPokemonList, fetchPokemonData } from '../../services/pokemonApi';\nimport './PokemonBattleApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonBattleApp = () => {\n  _s();\n  const [pokemon1, setPokemon1] = useState(null);\n  const [pokemon2, setPokemon2] = useState(null);\n  const [battleLog, setBattleLog] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [blast, setBlast] = useState(false); // New state for blast animation\n\n  useEffect(() => {\n    fetchRandomPokemon();\n  }, []);\n  const fetchRandomPokemon = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const pokemonList = await fetchPokemonList();\n      const randomPokemon = getRandomPokemon(pokemonList.results, 2);\n      const [poke1, poke2] = await Promise.all(randomPokemon.map(p => fetchPokemonData(p.url)));\n      setPokemon1(poke1);\n      setPokemon2(poke2);\n      setBattleLog('');\n    } catch (err) {\n      setError('Failed to fetch Pokémon data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getRandomPokemon = (pokemonList, count) => {\n    const shuffled = [...pokemonList].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  };\n  const startBattle = () => {\n    if (!pokemon1 || !pokemon2) return;\n    const power1 = pokemon1.move.power;\n    const power2 = pokemon2.move.power;\n    setBlast(true); // Trigger blast animation\n    setTimeout(() => setBlast(false), 500); // Remove blast after animation duration (500ms)\n\n    if (power1 > power2) {\n      setBattleLog(`${pokemon1.name} lands a decisive blow with ${pokemon1.move.name}, knocking out ${pokemon2.name}!`);\n    } else if (power2 > power1) {\n      setBattleLog(`${pokemon2.name} lands a decisive blow with ${pokemon2.move.name}, knocking out ${pokemon1.name}!`);\n    } else {\n      setBattleLog(\"It's a draw! Both Pokémon are evenly matched.\");\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading Pok\\xE9mon...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-battle-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pok\\xE9mon Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-arena\",\n      children: [pokemon1 && /*#__PURE__*/_jsxDEV(PokemonCard, {\n        pokemon: pokemon1,\n        isLeft: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }, this), pokemon2 && /*#__PURE__*/_jsxDEV(PokemonCard, {\n        pokemon: pokemon2,\n        isLeft: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startBattle,\n        className: `battle-button ${blast ? 'blast-animation' : ''}`,\n        children: \"Start Battle!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), battleLog && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-log\",\n      children: battleLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonBattleApp, \"OrHbnawNpADLyZvEP/jyds9PNBE=\");\n_c = PokemonBattleApp;\nexport default PokemonBattleApp;\nvar _c;\n$RefreshReg$(_c, \"PokemonBattleApp\");","map":{"version":3,"names":["React","useState","useEffect","PokemonCard","fetchPokemonList","fetchPokemonData","jsxDEV","_jsxDEV","PokemonBattleApp","_s","pokemon1","setPokemon1","pokemon2","setPokemon2","battleLog","setBattleLog","isLoading","setIsLoading","error","setError","blast","setBlast","fetchRandomPokemon","pokemonList","randomPokemon","getRandomPokemon","results","poke1","poke2","Promise","all","map","p","url","err","count","shuffled","sort","Math","random","slice","startBattle","power1","move","power","power2","setTimeout","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pokemon","isLeft","onClick","_c","$RefreshReg$"],"sources":["/Users/shwetasridharan/Pokemon-React-App/src/components/PokemonBattleApp/PokemonBattleApp.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PokemonCard from '../PokemonCard';\nimport { fetchPokemonList, fetchPokemonData } from '../../services/pokemonApi';\nimport { Pokemon, PokemonListItem } from '../../types/pokemon';\nimport './PokemonBattleApp.css';\n\nconst PokemonBattleApp: React.FC = () => {\n  const [pokemon1, setPokemon1] = useState<Pokemon | null>(null);\n  const [pokemon2, setPokemon2] = useState<Pokemon | null>(null);\n  const [battleLog, setBattleLog] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string>('');\n  const [blast, setBlast] = useState<boolean>(false); // New state for blast animation\n\n  useEffect(() => {\n    fetchRandomPokemon();\n  }, []);\n\n  const fetchRandomPokemon = async (): Promise<void> => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const pokemonList = await fetchPokemonList();\n      const randomPokemon = getRandomPokemon(pokemonList.results, 2);\n      const [poke1, poke2] = await Promise.all(randomPokemon.map(p => fetchPokemonData(p.url)));\n      setPokemon1(poke1);\n      setPokemon2(poke2);\n      setBattleLog('');\n    } catch (err) {\n      setError('Failed to fetch Pokémon data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getRandomPokemon = (pokemonList: PokemonListItem[], count: number): PokemonListItem[] => {\n    const shuffled = [...pokemonList].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  };\n\n  const startBattle = (): void => {\n    if (!pokemon1 || !pokemon2) return;\n    const power1 = pokemon1.move.power;\n    const power2 = pokemon2.move.power;\n\n    setBlast(true); // Trigger blast animation\n    setTimeout(() => setBlast(false), 500); // Remove blast after animation duration (500ms)\n\n    if (power1 > power2) {\n      setBattleLog(`${pokemon1.name} lands a decisive blow with ${pokemon1.move.name}, knocking out ${pokemon2.name}!`);\n    } else if (power2 > power1) {\n      setBattleLog(`${pokemon2.name} lands a decisive blow with ${pokemon2.move.name}, knocking out ${pokemon1.name}!`);\n    } else {\n      setBattleLog(\"It's a draw! Both Pokémon are evenly matched.\");\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading Pokémon...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"pokemon-battle-app\">\n      <h1>Pokémon Battle</h1>\n      <div className=\"battle-arena\">\n        {pokemon1 && <PokemonCard pokemon={pokemon1} isLeft={true} />}\n        {pokemon2 && <PokemonCard pokemon={pokemon2} isLeft={false} />}\n      </div>\n      <div className=\"battle-controls\">\n        <button \n          onClick={startBattle} \n          className={`battle-button ${blast ? 'blast-animation' : ''}`}> \n          Start Battle!\n        </button>\n      </div>\n      {battleLog && <div className=\"battle-log\">{battleLog}</div>}\n    </div>\n  );\n};\n\nexport default PokemonBattleApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}